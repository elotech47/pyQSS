name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

permissions:
  contents: read
  id-token: write  # For trusted publishing to PyPI

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.17.0
      env:
        CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
        CIBW_SKIP: "*-win32 *-musllinux*"
        CIBW_BEFORE_BUILD: pip install pybind11
        CIBW_TEST_COMMAND: python -c "import qss_integrator; from qss_integrator import QssIntegrator, PyQssOde; print('SUCCESS')"
        CIBW_BUILD_VERBOSITY: 1

    - uses: actions/upload-artifact@v4
      with:
        path: ./wheelhouse/*.whl
        name: wheels-${{ matrix.os }}

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build sdist
      run: pipx run build --sdist
      
    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz
        name: sdist

  upload_testpypi:
    name: Upload to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/qss-integrator
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        path: dist/
        merge-multiple: true
        
    - uses: actions/download-artifact@v4
      with:
        name: sdist
        path: dist/
        
    - name: Upload to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TESTPYPI_API_TOKEN }}

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment:
      name: pypi
      url: https://pypi.org/p/qss-integrator
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        path: dist/
        merge-multiple: true
        
    - uses: actions/download-artifact@v4
      with:
        name: sdist
        path: dist/
        
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}